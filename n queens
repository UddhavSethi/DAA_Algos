#include<stdio.h>
#include<stdbool.h>
#define N 5
void printBoard(int board[N][N])
{
    for(int i=0;i<N;i++)
    {
        for(int j=0;j<N;j++)
        
        {
            if(board[i][j]==1)
            
            {
                printf("Q ");
            }
            else
            {
                printf(". ");
            }
            
        }
        printf("\n");
    }
    printf("\n");
}
bool isSafe(int board[N][N],int row,int col)
{
    int i,j;
    //check col
    for(i<0;i<row;i++)
    {
        if(board[i][col])
        {
            return false;
        }
    }
    //check upper left diagonal
    for(i=row,j=col;i>=0 && j>=0;i--,j--)
    {
        if(board[i][j])
        {
            return false;
        }
    }
    //check upper right diagonal
    for(i=row,j=col;i>=0 && j<N;i--,j++)
    {
        if(board[i][j])
        {
            return false;
        }
    }
    return true;
}
bool solveNqueens(int board[N][N],int row)
{
    if(row>=N)
    {
        printBoard(board);
        return true;
    }
    bool res=false;
    for(int col=0;col<N;col++)
    {
        if(isSafe(board,row,col))
        {
            board[row][col]=1;
            res=solveNqueens(board,(row+1))||res;
            board[row][col]=0;
            
        }
    }
    return res;
}
int main()
{
    int board[N][N]={0};
    if(!solveNqueens(board,0))
    {
        printf("No solution exists.\n");
    }
}
